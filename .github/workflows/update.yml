name: Update Copr
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
jobs:
  Update-Cursor:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Check latest version and update spec
        run: |
          # Download the file and get its name
          curl -LJO https://downloader.cursor.sh/linux/appImage/x64
          LATEST_FILE=$(ls cursor-*x86_64.AppImage)
          echo "Latest file: $LATEST_FILE"

          LATEST_VERSION=$(echo $LATEST_FILE | sed -E 's/cursor-([0-9.]+)x86_64\.AppImage/\1/')
          echo "Latest version: $LATEST_VERSION"

          CURRENT_VERSION=$(grep "Version:" cursor.spec | awk '{print $2}')
          echo "Current version: $CURRENT_VERSION"

          if [[ "$LATEST_VERSION" > "$CURRENT_VERSION" ]]; then
            echo "New version found: $LATEST_VERSION"
            sed -i "s/Version:        .*/Version:        $LATEST_VERSION/" cursor.spec
            sed -i "s/Source0:        .*/Source0:        ${LATEST_FILE}/" cursor.spec

            sudo apt-get update
            sudo apt-get install -y rpm python3-pip

            pip3 install copr-cli

            mkdir -p ~/.config
            echo "${{ secrets.COPR_CONFIG }}" > ~/.config/copr

            mkdir -p rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
            cp cursor.spec rpmbuild/SPECS/cursor.spec
            cp "$LATEST_FILE" rpmbuild/SOURCES/

            rpmbuild -bs rpmbuild/SPECS/cursor.spec

            # SRPM_NAME=$(echo "${LATEST_FILE}" | sed 's/\.AppImage/\.src\.rpm/')
            SRPM_NAME=$(ls ~/rpmbuild/SRPMS/cursor-*.src.rpm)
            copr-cli build cursor ~/rpmbuild/SRPMS/${SRPM_NAME}

            git config --global user.email "github-actions@github.com"
            git config --global user.name "GitHub Actions"

            git add cursor.spec
            git commit -m "Update Cursor to version $LATEST_VERSION"
            git push

            gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
            gh release create "v${LATEST_VERSION}" \
              --title "Cursor ${LATEST_VERSION}" \
              --notes "Updated Cursor to version ${LATEST_VERSION}"

            # Clean up downloaded file
            rm "$LATEST_FILE"
          else
            echo "Current version is up to date"
            # Clean up downloaded file
            rm "$LATEST_FILE"
          fi
